{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/analytics/analytics.component.ts","./src/app/analytics/analytics.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cust-database/cust-database.component.ts","./src/app/cust-database/cust-database.component.html","./src/app/rain-schedule/rain-schedule.component.ts","./src/app/rain-schedule/rain-schedule.component.html","./src/app/service/current-route.service.ts","./src/app/service/weather-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAET;;;;AAIzC,IAAI,KAAK,GAAG,mBAAO,CAAC,4EAA0B,CAAC,CAAC;AAChD,IAAI,MAAM,GAAG,mBAAO,CAAC,sGAAuC,CAAC,CAAC;AAC9D,IAAI,IAAI,GAAG,mBAAO,CAAC,gFAA4B,CAAC,CAAC;AAEjD,KAAK,CAAC,uCAAU,CAAC,CAAC;AAClB,MAAM,CAAC,uCAAU,CAAC,CAAC;AACnB,IAAI,CAAC,uCAAU,CAAC,CAAC;AACjB,MAAM,CAAC,uCAAU,CAAC,CAAC;AAOZ,MAAM,kBAAkB;IAQ7B,YAAoB,kBAAsC,EAAU,mBAAwC;QAAxF,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAP5G,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAG,EAAE,CAAC;QAIb,iBAAY,GAAG,eAAe,CAAC;IAEiF,CAAC;IAEjH,OAAO,CAAE,CAAC,EAAE,CAAC;QACX,IAAK,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE;YACxD,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAK,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE;YACxD,OAAO,CAAC,CAAC;SACV;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAC,OAAO,CAAE,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,OAAO,GAAG,CAAC,QAAQ,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrF,IAAI,CAAC,OAAO,GAAG;gBACb,KAAK,EAAE;oBACL,IAAI,EAAE,QAAQ;oBACd,MAAM,EAAE,GAAG;oBACX,WAAW,EAAE;wBACX,OAAO,EAAE,IAAI;qBACd;iBACF;gBACD,MAAM,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE;gBAC/B,KAAK,EAAE;oBACL,IAAI,EAAE,EAAE;iBACT;gBACD,KAAK,EAAE;oBACJ,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,OAAO,GAAG,CAAC,IAAI,GAAC,CAAC;iBAC/D;gBACD,KAAK,EAAG;oBACN,KAAK,EAAG;wBACN,IAAI,EAAE,qBAAqB;qBAC5B;iBACF;gBACD,MAAM,EAAC,CAAE;wBACP,IAAI,EAAE,WAAW;wBACjB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;4BACjC,IAAI,IAAI,GAAI,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;4BACtF,OAAO,IAAI,CAAC;wBACd,CAAC,CAAC;qBACH,CAAC;aACH;YAED,gDAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;;oFAhEU,kBAAkB;kGAAlB,kBAAkB;QCpB/B,yEACA;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,oEAA0B;QAC1B,4DAAM;;6FDiBO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEyB;AACA;AACX;;;AAGrE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC/D,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC/D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACxD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,4FAAqB,EAAE;CACjD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE+C;;;;;;AAS1F,MAAM,YAAY;IAIvB,YAAmB,MAAc,EAAU,mBAAwC,EAAU,QAAkB;QAA5F,WAAM,GAAN,MAAM,CAAQ;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAH/G,UAAK,GAAG,kBAAkB,CAAC;QAC3B,iBAAY,GAAG,mBAAmB,CAAC;QAGjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YAC5C,IAAI,KAAK,YAAY,6DAAa,EAAG;gBACnC,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE;oBACpB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;oBACjD,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;iBACzC;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBACxC;aACF;QACL,CAAC,CAAC,CAAC;IACF,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;IACjE,CAAC;IAED,eAAe,CAAC,QAAgB;QAC9B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC/B,CAAC;;wEAvBU,YAAY;4FAAZ,YAAY;QCXzB,yEACE;QACA,wEACE;QAAA,wEACE;QAAA,uEACE;QAD0D,+HAAS,oBAAgB,mBAAmB,CAAC,IAAC;QACxG,6EAAiB;QAAA,4DAAI;QACzB,4DAAK;QACL,wEACE;QAAA,uEACE;QAD0D,+HAAS,oBAAgB,mBAAmB,CAAC,IAAC;QACxG,yEAAa;QAAA,4DAAI;QACrB,4DAAK;QACL,wEACE;QAAA,uEACE;QADsD,+HAAS,oBAAgB,eAAe,CAAC,IAAC;QAChG,sEAAS;QAAA,4DAAI;QACjB,4DAAK;QACP,4DAAK;QAEP,4DAAM;QAEN,4EAA+B;;QAhBN,0DAAoH;QAApH,8NAAoH;QAIpH,0DAAoH;QAApH,8NAAoH;QAIpH,0DAA4G;QAA5G,sNAA4G;;6FDAxH,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AACV;AAGA;AACT;AACiC;AACA;AACX;AACzB;;AAoBrC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,oEAAgB;YAChB,yDAAW;SACZ;mIAIU,SAAS,mBAhBlB,2DAAY;QACZ,4FAAqB;QACrB,4FAAqB;QACrB,iFAAkB,aAGlB,uEAAa;QACb,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,oEAAgB;QAChB,yDAAW;6FAKF,SAAS;cAlBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,4FAAqB;oBACrB,4FAAqB;oBACrB,iFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,oEAAgB;oBAChB,yDAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;ICGxD,qEACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,yEAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACjB,qEAAI;IAAA,+EAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACnB,4DAAK;;;;IAOW,4EACJ;IADkC,yXAA0B;IAAxD,4DACJ;;;IADkC,oFAA0B;;;IAGxD,uDACJ;;;IADI,2FACJ;;;;IAMI,4EACJ;IADkC,kYAAmC;IAAjE,4DACJ;;;IADkC,6FAAmC;;;IAGjE,uDACJ;;;IADI,oGACJ;;;;IAMI,4EACJ;IADkC,2XAA2B;IAAzD,4DACJ;;;IADkC,qFAA2B;;;IAGzD,uDACJ;;;IADI,4FACJ;;;;IAMI,4EACJ;IADkC,8XAA8B;IAA5D,4DACJ;;;IADkC,wFAA8B;;;IAG5D,uDACJ;;;IADI,+FACJ;;;;IAMI,4EACJ;IADkC,oYAAoC;IAAlE,4DACJ;;;IADkC,8FAAoC;;;IAGlE,uDACJ;;;IADI,qGACJ;;;;IAIJ,6EACgF;IAAjC,wbAAgC;IAAC,mEACxB;IAAA,4DAAS;;;;IACjE,6EAEqC;IAAjC,wbAAgC;IAAC,mEAAkD;IAAA,4DAAS;;;;IAChG,6EACwF;IAAvC,0fAAsC;IAAC,mEACjC;IAAA,4DAAS;;;;IA5DxE,wEACI;IAAA,wEACI;IAAA,+EACI;IAAA,+IACI;IAEJ,+IACI;IAER,4DAAe;IACnB,4DAAK;IACL,qEACI;IAAA,+EACI;IAAA,+IACI;IAEJ,+IACI;IAER,4DAAe;IACnB,4DAAK;IACL,qEACI;IAAA,gFACI;IAAA,iJACI;IAEJ,iJACI;IAER,4DAAe;IACnB,4DAAK;IACL,sEACI;IAAA,gFACI;IAAA,iJACI;IAEJ,iJACI;IAER,4DAAe;IACnB,4DAAK;IACL,sEACI;IAAA,gFACI;IAAA,iJACI;IAEJ,iJACI;IAER,4DAAe;IACnB,4DAAK;IACL,0EACI;IAAA,wIACgF;IAEhF,wIAEqC;IACrC,wIACwF;IAE5F,4DAAK;IACL,0EACI;IAAA,8EAEI;IADA,mXAA8B;IAC9B,oEAAkD;IACtD,4DAAS;IACb,4DAAK;IACT,4DAAK;;;;IApED,oFAAwB;IAoDZ,2DAAgB;IAAhB,6EAAgB;IAGhB,0DAAe;IAAf,4EAAe;IAGf,0DAAe;IAAf,4EAAe;;;IAwB/B,0EAEI;IAAA,wEACI;IAAA,8EACJ;IAAA,4DAAQ;IACZ,4DAAM;;;IAON,0EAEI;IAAA,wEACI;IAAA,gGACJ;IAAA,4DAAQ;IACZ,4DAAM;;;IASF,wEACI;IAAA,sFACJ;IAAA,4DAAQ;;;IACR,wEACI;IAAA,+FACJ;IAAA,4DAAQ;;;IAPZ,0EAEI;IAAA,mIACI;IAEJ,mIACI;IAER,4DAAM;;;IANK,0DAAgD;IAAhD,yKAAgD;IAGhD,0DAA+C;IAA/C,wKAA+C;;;IAU1D,0EAEI;IAAA,wEACI;IAAA,4FACJ;IAAA,4DAAQ;IACZ,4DAAM;;;IASF,wEACI;IAAA,6FACJ;IAAA,4DAAQ;;;IACR,wEACI;IAAA,iFACJ;IAAA,4DAAQ;;;IAPZ,0EAEI;IAAA,mIACI;IAEJ,mIACI;IAER,4DAAM;;;IANK,0DAAyD;IAAzD,2LAAyD;IAGzD,0DAAwD;IAAxD,0LAAwD;;;;IAjE3E,0EACI;IAAA,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,2EACI;IADyB,+TAAuB;IAChD,0EACI;IAAA,wEACI;IAAA,kEACJ;IAAA,4DAAQ;IACR,uEACJ;IAAA,4DAAM;IACN,wHAEI;IAIJ,0EACI;IAAA,yEACI;IAAA,gFACJ;IAAA,4DAAQ;IACR,wEACJ;IAAA,4DAAM;IACN,0HAEI;IAIJ,2EACI;IAAA,yEACI;IAAA,+EACJ;IAAA,4DAAQ;IACR,wEACJ;IAAA,4DAAM;IACN,0HAEI;IAOJ,2EACI;IAAA,yEACI;IAAA,8EACJ;IAAA,4DAAQ;IACR,wEACJ;IAAA,4DAAM;IACN,0HAEI;IAIJ,2EACI;IAAA,yEACI;IAAA,kFACJ;IAAA,4DAAQ;IACR,wEACJ;IAAA,4DAAM;IACN,0HAEI;IAQJ,2EACI;IAAA,8EAAyE;IAAA,+DAAG;IAAA,4DAAS;IACrF,8EAA4D;IAA/B,4TAAuB,KAAK,IAAE;IAAC,kEAAM;IAAA,4DAAS;IAC/E,4DAAM;IACV,4DAAO;IACX,4DAAM;;;IAzEI,0DAAsB;IAAtB,sFAAsB;IAOnB,0DAA0G;IAA1G,yLAA0G;IAY1G,0DAAqI;IAArI,oNAAqI;IAYrI,0DAA6G;IAA7G,4LAA6G;IAe7G,0DAA+H;IAA/H,yQAA+H;IAY/H,0DAAwI;IAAxI,uNAAwI;IAW7F,0DAA4B;IAA5B,4FAA4B;;ADrJjF,MAAM,qBAAqB;IAOhC,YAAoB,kBAAsC,EAAU,mBAAwC;QAAxF,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAL5G,iBAAY,GAAG,mBAAmB,CAAC;QACnC,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;IAEkG,CAAC;IAEjH,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAClF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACpF,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACjC;gBACE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBACxB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI;gBAC9B,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa;gBAChD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ;gBACtC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc;aACnD;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,qBAAQ,IAAI,CAAE,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,IAAI,EAAE,KAAK;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,IAAI;QACd,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;IAC/D,CAAC;;0FAvDU,qBAAqB;qGAArB,qBAAqB;QCVlC,yEACI;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,6EACI;QAAA,kIACI;QAUJ,kIACI;QAsER,4DAAU;QAEV,4EAAgE;QAAnB,6IAAQ,cAAU;QAAC,uEAAY;QAAA,4DAAS;QACrF,kHACI;QA2ER,4DAAM;;QAlKO,0DAAkB;QAAlB,+EAAkB;QAsFG,0DAAmB;QAAnB,iFAAmB;;6FD9ExC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICItC,qEACI;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,yEAAc;IAAA,4DAAK;IACvB,qEAAI;IAAA,gEAAK;IAAA,4DAAK;IACd,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACjB,qEAAI;IAAA,sEAAU;IAAA,4DAAK;IACvB,4DAAK;;;IAGL,wEACI;IAAA,wEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,qEACI;IAAA,wDACJ;IAAA,4DAAK;IAET,4DAAK;;;IAjBD,oFAAwB;IAEpB,0DACJ;IADI,2FACJ;IAEI,0DACJ;IADI,oGACJ;IAEI,0DACJ;IADI,4FACJ;IAEI,0DACJ;IADI,+FACJ;IAEI,0DACJ;IADI,sGACJ;;ADnBT,MAAM,qBAAqB;IAQhC,YAAoB,kBAAsC,EAAU,mBAAwC;QAAxF,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAP5G,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,uBAAkB,GAAC,EAAE,CAAC;QACtB,aAAQ,GAAG,EAAE,CAAC;QACd,iBAAY,GAAG,mBAAmB,CAAC;IAE6E,CAAC;IAEjH,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC3D,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,OAAO,GAAG,CAAC,QAAQ,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,eAAe,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxG,4CAA4C;YAC5C,qEAAqE;YACrE,0CAA0C;YAC1C,oEAAoE;YACpE,qFAAqF;YACrF,8EAA8E;YAC9E,yCAAyC;YACzC,8CAA8C;YAC9C,qIAAqI;YACrI,4FAA4F;YAC5F,4IAA4I;YAC5I,uFAAuF;YACvF,sDAAsD;YACtD,qEAAqE;YACrE,qBAAqB;YACrB,mEAAmE;YACnE,cAAc;YAEd,gDAAgD;YAChD,YAAY;YACZ,UAAU;YACV,QAAQ;YACR,MAAM;YAEN,0DAA0D;YAC1D,4BAA4B;YAC5B,QAAQ;YAER,oDAAoD;YAEpD,iGAAiG;YAEjG,uDAAuD;YACvD,sDAAsD;YACtD,0CAA0C;YAC1C,qFAAqF;YACrF,sDAAsD;YACtD,sBAAsB;YACtB,UAAU;YACV,QAAQ;YACR,QAAQ;YAER,MAAM;QAEN,CAAC,CAAC,CAAC;IACL,CAAC;;0FAjEU,qBAAqB;qGAArB,qBAAqB;QCTlC,yEACI;QAAA,qEAAI;QAAA,+FAAoC;QAAA,4DAAK;QAC7C,6EACI;QAAA,kIACI;QAQJ,kIACI;QAmBR,4DAAU;QACd,4DAAM;;QA/BO,0DAAqB;QAArB,kFAAqB;;6FDOrB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,mBAAmB;IAG9B;QAFA,iBAAY,GAAG,mBAAmB,CAAC;IAEnB,CAAC;IAEjB,eAAe,CAAC,QAAQ;QACtB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC/B,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;;sFAXU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEC;;;AAKrC,MAAM,kBAAkB;IAgF7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QA/EpC,QAAG,GAAG,sBAAsB,CAAC;QAC7B,qDAAqD;QACrD,WAAM,GAAG,yCAAyC,CAAC;QACnD,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG;YACT;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,YAAY;gBACtB,cAAc,EAAE,IAAI;aACrB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,UAAU;gBACpB,cAAc,EAAE,KAAK;aACtB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,cAAc;gBACxB,cAAc,EAAE,IAAI;aACrB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,SAAS;gBACnB,cAAc,EAAE,GAAG;aACpB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,UAAU;gBACpB,cAAc,EAAE,KAAK;aACtB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,OAAO;gBACjB,cAAc,EAAE,IAAI;aACrB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,UAAU;gBACpB,cAAc,EAAE,KAAK;aACtB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,UAAU;gBACpB,cAAc,EAAE,IAAI;aACrB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,OAAO;gBACb,aAAa,EAAE,OAAO;gBACtB,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,WAAW;gBACrB,cAAc,EAAE,KAAK;aACtB;SACF;IAEuC,CAAC;IAEzC,eAAe;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,oBAAoB,CAAC,SAAS;QACnC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,GAAC,IAAI,CAAC,GAAG,GAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACnG;QACD,OAAO,qDAAQ,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAEM,gBAAgB,CAAC,GAAG;QACzB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACrC,IAAI,iBAAiB,GAAG,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAChE,IAAI,mBAAmB,GAAG,IAAI,IAAI,EAAE,CAAC;QACrC,mBAAmB,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,yBAAyB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAChF,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,WAAW,EAAE,EAAE;YACtE,IAAI,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,iBAAiB,GAAG,UAAU,CAAC,IAAI;YACvC,KAAK,IAAI,wBAAwB,GAAG,CAAC,EAAE,wBAAwB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,wBAAwB,EAAE,EAAE;gBAC3H,IAAI,WAAW,GAAG,iBAAiB,CAAC,wBAAwB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;oBAChI,IAAI,iBAAiB,CAAC,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE;wBACzE,IAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;4BACtC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBACvD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;yBACrD;wBAED,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC/B;iBACF;aACF;SACF;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAEI,qBAAqB,CAAC,GAAG,EAAE,eAAe,EAAE,QAAQ;QACvD,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,cAAc,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,cAAc,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAE/C,IAAI,kBAAkB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEvF,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YACrC,IAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC5C,IAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC3C,OAAO,GAAG,CAAC;iBACZ;aACF;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,qBAAqB,CAAC,GAAG,EAAE,QAAQ;QACjC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,cAAc,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,cAAc,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAE/C,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YACpC,IAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACxC,IAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,GAAG,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBAC5C;aACF;YACD,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;;oFAxKU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { WeatherDataService } from '../service/weather-data.service';\nimport * as Highcharts from 'highcharts';\nimport { CurrentRouteService } from 'src/app/service/current-route.service';\n\ndeclare var require: any;\nlet Boost = require('highcharts/modules/boost');\nlet noData = require('highcharts/modules/no-data-to-display');\nlet More = require('highcharts/highcharts-more');\n\nBoost(Highcharts);\nnoData(Highcharts);\nMore(Highcharts);\nnoData(Highcharts);\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.scss']\n})\nexport class AnalyticsComponent implements OnInit { \n  displayData = [];\n  options = {};\n  custData;\n  custCityNames;\n  uniqueCityNames;\n  currentRoute = 'app-analytics';\n\n  constructor(private weatherDataService: WeatherDataService, private currentRouteService: CurrentRouteService) { }\n\n  compare( a, b ) {\n    if ( Number(a.numOfEmployees) > Number(b.numOfEmployees) ){\n      return -1;\n    }\n    if ( Number(a.numOfEmployees) < Number(b.numOfEmployees) ){\n      return 1;\n    }\n    return 0;\n  }\n  \n\n  ngOnInit(): void {    \n    this.currentRouteService.setCurrentRoute(this.currentRoute); \n    this.custData =  this.weatherDataService.getCustomerData();\n    this.custData.sort( this.compare );\n    this.custData = this.custData.slice(0, 4)\n    this.custCityNames = this.custData.map((obj) => {\n      return obj.location;\n    });\n    let uniqueSet = new Set(this.custCityNames);\n    this.uniqueCityNames = [...this.custCityNames];\n    this.weatherDataService.getWeatherDataByCity(this.uniqueCityNames).subscribe((res) => {\n      this.displayData = this.weatherDataService.getRainyCityChartData(res, this.custData);\n      this.options = {\n        chart: {\n          type: 'column',\n          height: 350,\n          dataSorting: {\n            enabled: true\n          },\n        },\n        legend: { symbolHeight: '0px' },\n        title: {\n          text: ''\n        },\n        xAxis: {\n           categories: this.displayData.map((obj) => { return obj.name})\n        },\n        yAxis : {\n          title : {\n            text: 'Number of Employees'\n          }\n        },\n        series:[ {\n          name: 'Customers',\n          data: this.displayData.map((obj) => { \n            let temp =  { y: Number(obj.numOfEmployees), color: ((obj.dates) ? 'green' : 'red') }; \n            return temp;\n          })\n        }]\n      }\n\n      Highcharts.chart('container', this.options);\n    });\n  }\n\n}\n","<div class=\"chart-container\">\r\n<h4>Top Emloyees</h4>\r\n<div id=\"container\"></div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustDatabaseComponent } from './cust-database/cust-database.component';\nimport { RainScheduleComponent } from './rain-schedule/rain-schedule.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\n\n\nconst routes: Routes = [\n  { path: 'app-cust-database', component: CustDatabaseComponent },\n  { path: 'app-rain-schedule', component: RainScheduleComponent },\n  { path: 'app-analytics', component: AnalyticsComponent },\n  { path: '**', component: CustDatabaseComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, Event, NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\n\nimport { CurrentRouteService } from 'src/app/service/current-route.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'fakeUmbrella-app';\n  currentRotue = 'app-cust-database';\n\n  constructor(public router: Router, private currentRouteService: CurrentRouteService, private location: Location) {\n    this.router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd ) {\n        if (event.url == '/') {\n          this.location.replaceState('/app-cust-database');\n          this.currentRotue = 'app-cust-database';\n        } else {\n          this.currentRotue = event.url.slice(1);    \n        }     \n      }\n  });\n   }\n\n  ngOnInit() {\n    this.currentRotue = this.currentRouteService.getCurrentRoute();\n  }\n\n  setCurrentRoute(routeStr: string) {\n    this.currentRotue = routeStr;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\"> -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" [ngClass]=\"{'active' : (currentRotue === 'app-cust-database'), 'inactive' : (currentRotue !== 'app-cust-database')}\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"app-cust-database\" (click)=\"setCurrentRoute('app-cust-database')\">\n        Customer Database</a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{'active' : (currentRotue === 'app-rain-schedule'), 'inactive' : (currentRotue !== 'app-rain-schedule')}\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"app-rain-schedule\" (click)=\"setCurrentRoute('app-rain-schedule')\">\n        Rain Schedule</a>\n    </li>\n    <li class=\"nav-item\" [ngClass]=\"{'active' : (currentRotue === 'app-analytics'), 'inactive' : (currentRotue !== 'app-analytics')}\">\n      <a class=\"nav-link\" href=\"#\" routerLink=\"app-analytics\" (click)=\"setCurrentRoute('app-analytics')\">\n        Analytics</a>\n    </li>\n  </ul>\n<!-- </div> -->\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustDatabaseComponent } from './cust-database/cust-database.component';\nimport { RainScheduleComponent } from './rain-schedule/rain-schedule.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { TableModule } from 'primeng/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustDatabaseComponent,\n    RainScheduleComponent,\n    AnalyticsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    TableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WeatherDataService } from '../service/weather-data.service';\nimport { CurrentRouteService } from 'src/app/service/current-route.service';\n\n@Component({\n  selector: 'app-cust-database',\n  templateUrl: './cust-database.component.html',\n  styleUrls: ['./cust-database.component.scss']\n})\nexport class CustDatabaseComponent implements OnInit {\n  custForm;\n  currentRoute = 'app-cust-database';\n  showAddForm: boolean = false;\n  clonedCusts = [];\n  custData = [];\n\n  constructor(private weatherDataService: WeatherDataService, private currentRouteService: CurrentRouteService) { }\n\n  ngOnInit(): void {\n    this.currentRouteService.setCurrentRoute(this.currentRoute);\n    this.custData =  this.weatherDataService.getCustomerData();\n    this.custForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      contactPerson: new FormControl('', Validators.required),\n      phone: new FormControl('', [ Validators.required, Validators.pattern(\"^[0-9]*$\")]),\n      location: new FormControl('', [Validators.required, Validators.pattern(\"^[0-9]*$\")]),\n      numOfEmployees: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.showAddForm = false;\n    console.log(this.custForm);\n    this.custData[this.custData.length] =\n      {\n        id: this.custData.length,\n        name: this.custForm.value.name,\n        contactPerson: this.custForm.value.contactPerson,\n        phone: this.custForm.value.phone,\n        location: this.custForm.value.location,\n        numOfEmployees: this.custForm.value.numOfEmployees\n      }\n  }\n\n  showForm() {\n    this.showAddForm = true;\n  }\n\n  onRowEditInit(cust) {\n    this.clonedCusts[cust.id] = { ...cust };\n  }\n\n  onRowEditSave(cust) {\n    delete this.clonedCusts[cust.id];\n  }\n\n  onRowEditCancel(cust, index) {\n    this.custData[index] = this.clonedCusts[cust.id];\n    delete this.clonedCusts[cust.id];\n  }\n\n  onRowDelete(cust) {\n    let index = this.custData.indexOf(cust);\n    this.custData = this.custData.filter((val, i) => i != index);\n  }\n\n}\n","<div class=\"table-container\">\n    <h4>Customers</h4>\n    <p-table [value]=\"custData\" [responsive]=\"true\" dataKey=\"id\" editMode=\"row\">\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th>Name</th>\n                <th>Contact Person</th>\n                <th>Phone</th>\n                <th>Location</th>\n                <th>Number of Employees</th>\n                <th>Edit</th>\n                <th>Delete</th>\n            </tr>\n        </ng-template>        \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n            <tr [pEditableRow]=\"rowData\">\n                <td pEditableColumn>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.name\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.name}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.contactPerson\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.contactPerson}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.phone\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.phone}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.location\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.location}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.numOfEmployees\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.numOfEmployees}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td style=\"text-align:center\">\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow\n                        class=\"ui-button-info p-table-button-icon\" (click)=\"onRowEditInit(rowData)\"><i\n                            class=\"pi pi-pencil\" style=\"font-size: 1em\"></i></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow\n                        class=\"ui-button-success p-table-button-icon\" style=\"margin-right: .5em\"\n                        (click)=\"onRowEditSave(rowData)\"><i class=\"pi pi-check\" style=\"font-size: 1em\"></i></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow\n                        class=\"ui-button-danger p-table-button-icon\" (click)=\"onRowEditCancel(rowData, ri)\"><i\n                            class=\"pi pi-times\" style=\"font-size: 1em\"></i></button>\n                </td>\n                <td style=\"text-align:center\">\n                    <button pButton type=\"button\" pInitEditableRow class=\"ui-button-info p-table-button-icon\"\n                        (click)=\"onRowDelete(rowData)\">\n                        <i class=\"pi pi-trash\" style=\"font-size: 1em\"></i>\n                    </button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n\n    <button class=\"add-cust-btn btn btn-primary\" (click)=showForm()>Add Customer</button>\n    <div class=\"center-container\" *ngIf=\"showAddForm\">\n        <h4>Add customer</h4>\n        <form [formGroup]=\"custForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label>\n                    Name:\n                </label>\n                <input class=\"form-control\" type=\"text\" formControlName=\"name\">\n            </div>\n            <div *ngIf=\"custForm.controls.name.invalid && (custForm.controls.name.dirty || custForm.controls.name.touched)\"\n                class=\"alert alert-danger\">\n                <small>\n                    Name is required.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>\n                    Person of contact:\n                </label>\n                <input class=\"form-control\" type=\"text\" formControlName=\"contactPerson\">\n            </div>\n            <div *ngIf=\"custForm.controls.contactPerson.invalid && (custForm.controls.contactPerson.dirty || custForm.controls.contactPerson.touched)\"\n                class=\"alert alert-danger\">\n                <small>\n                    Name of contact person is required.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>\n                    Telephone number:\n                </label>\n                <input class=\"form-control\" type=\"text\" formControlName=\"phone\">\n            </div>\n            <div *ngIf=\"custForm.controls.phone.invalid && (custForm.controls.phone.dirty || custForm.controls.phone.touched)\"\n                class=\"alert alert-danger\">\n                <small *ngIf=\"custForm.controls.phone.errors?.required\">\n                    Phone number is required.\n                </small>\n                <small *ngIf=\"custForm.controls.phone.errors?.pattern\">\n                    Please enter a valid phone number.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>\n                    Location (City):\n                </label>\n                <input class=\"form-control\" type=\"text\" formControlName=\"location\">\n            </div>\n            <div *ngIf=\"custForm.controls.location.errors?.required && (custForm.controls.location.dirty || custForm.controls.location.touched)\"\n                class=\"alert alert-danger\">\n                <small>\n                    Location city name is required.\n                </small>\n            </div>\n            <div class=\"form-group\">\n                <label>\n                    Number of employees:\n                </label>\n                <input class=\"form-control\" type=\"text\" formControlName=\"numOfEmployees\">\n            </div>\n            <div *ngIf=\"custForm.controls.numOfEmployees.invalid && (custForm.controls.numOfEmployees.dirty || custForm.controls.numOfEmployees.touched)\"\n                class=\"alert alert-danger\">\n                <small *ngIf=\"custForm.controls.numOfEmployees.errors?.required\">\n                    Number of employees is required.\n                </small>\n                <small *ngIf=\"custForm.controls.numOfEmployees.errors?.pattern\">\n                    Please enter number.\n                </small>\n            </div>\n\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-light\" [disabled]=\"!custForm.valid\">Add</button>\n                <button class=\"btn btn-link\" (click)=\"showAddForm = false;\">Cancel</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WeatherDataService } from 'src/app/service/weather-data.service';\nimport { CurrentRouteService } from 'src/app/service/current-route.service';\n\n@Component({\n  selector: 'app-rain-schedule',\n  templateUrl: './rain-schedule.component.html',\n  styleUrls: ['./rain-schedule.component.scss']\n})\nexport class RainScheduleComponent implements OnInit {\n  custData = [];\n  displayData = [];\n  cityWithRain = [];\n  rainyCityChartData=[];\n  rainDate = {};\n  currentRoute = 'app-rain-schedule';\n\n  constructor(private weatherDataService: WeatherDataService, private currentRouteService: CurrentRouteService) { }\n\n  ngOnInit(): void {\n    this.currentRouteService.setCurrentRoute(this.currentRoute);\n    this.custData =  this.weatherDataService.getCustomerData();\n    let custCityNames = this.custData.map((obj) => {\n      return obj.location;\n    });\n    let uniqueSet = new Set(custCityNames);\n    let uniqueCityNames = [...uniqueSet];\n    this.weatherDataService.getWeatherDataByCity(uniqueCityNames).subscribe((res) => {\n      this.displayData = this.weatherDataService.getRainyCityTableData(res, uniqueCityNames, this.custData);\n    //   let currentDate = new Date(Date.now());\n    //   let cureentFormatDate = currentDate.toLocaleDateString('en-CA');\n    //   let currentDatePlusFive = new Date();\n    //   currentDatePlusFive.setDate(currentDatePlusFive.getDate() + 5);\n    //   let currentDatePlusFiveFormat = currentDatePlusFive.toLocaleDateString('en-CA');\n    //   for (let counterCity = 0; counterCity <= res.length - 1; counterCity++) {\n    //     let cityDetail = res[counterCity];\n    //     let cityWeatherDetail = cityDetail.list\n    //     for (let counterCityWeatherDetail = 0; counterCityWeatherDetail <= cityWeatherDetail.length - 1; counterCityWeatherDetail++) {\n    //       let dateFromApi = cityWeatherDetail[counterCityWeatherDetail].dt_txt.split(' ')[0];\n    //       if (Date.parse(dateFromApi) <= Date.parse(currentDatePlusFiveFormat) && Date.parse(dateFromApi) >= Date.parse(cureentFormatDate)) {\n    //         if (cityWeatherDetail[counterCityWeatherDetail].weather[0].main == 'Rain') {\n    //           if(this.rainDate[cityDetail.city.name]) {\n    //             this.rainDate[cityDetail.city.name].push(dateFromApi);\n    //           } else {\n    //             this.rainDate[cityDetail.city.name] = [dateFromApi];\n    //           }\n              \n    //           this.cityWithRain.push(cityDetail);\n    //         }\n    //       }\n    //     }\n    //   }\n      \n    //   let rainyCityNames = this.cityWithRain.map((obj) => {\n    //     return obj.city.name;\n    //   });\n\n    //   rainyCityNames = [...(new Set(rainyCityNames))]\n\n    //   let intersectionCities = rainyCityNames.filter(e => this.uniqueCityNames.indexOf(e) !== -1);\n\n    //   this.displayData = this.custData.filter((obj) => {\n    //     if(intersectionCities.includes(obj.location)) {\n    //       if(this.rainDate[obj.location]) {\n    //         this.rainDate[obj.location] = [...(new Set(this.rainDate[obj.location]))];\n    //         obj['dates'] = this.rainDate[obj.location];\n    //         return obj;\n    //       }\n    //     }\n    //   });\n\n    // });\n\n    });\n  }\n\n}\n","<div class=\"table-container\">\n    <h4>Customers having rain in next 5 days</h4>\n    <p-table [value]=\"displayData\" [responsive]=\"true\" dataKey=\"id\" editMode=\"row\">\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th>Name</th>\n                <th>Contact Person</th>\n                <th>Phone</th>\n                <th>Location</th>\n                <th>Rainy days</th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n            <tr [pEditableRow]=\"rowData\">\n                <td pEditableColumn>\n                    {{rowData.name}}\n                </td>\n                <td>\n                    {{rowData.contactPerson}}\n                </td>\n                <td>\n                    {{rowData.phone}}\n                </td>\n                <td>\n                    {{rowData.location}}\n                </td>\n                <td>\n                    {{rowData.dates.join(',')}}\n                </td>\n                \n            </tr>\n        </ng-template>\n    </p-table>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentRouteService {\n  currentRoute = 'app-cust-database';\n\n  constructor() { }\n\n  setCurrentRoute(routeStr) {\n    this.currentRoute = routeStr;\n  }\n\n  getCurrentRoute() {\n    return this.currentRoute;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n  url = 'data/2.5/forecast?q=';\n  //urlEnd = '&appid=b124e62b5d798387f996d6cbdad467cd';\n  urlEnd = '&appid=107a6c58dda97cfd410e280832acd568';\n  rainDate = {};\n  custData = [\n    {\n      id: 0,\n      name: 'test1',\n      contactPerson: 'test1',\n      phone: '1234567890',\n      location: 'Greensboro',\n      numOfEmployees: '10'\n    },\n    {\n      id: 1,\n      name: 'test2',\n      contactPerson: 'test2',\n      phone: '1234567890',\n      location: 'Virginia',\n      numOfEmployees: '100'\n    },\n    {\n      id: 2,\n      name: 'test3',\n      contactPerson: 'test3',\n      phone: '1234567890',\n      location: 'Philadelphia',\n      numOfEmployees: '70'\n    },\n    {\n      id: 3,\n      name: 'test4',\n      contactPerson: 'test4',\n      phone: '1234567890',\n      location: 'Toronto',\n      numOfEmployees: '5'\n    },\n    {\n      id: 4,\n      name: 'test5',\n      contactPerson: 'test5',\n      phone: '1234567890',\n      location: 'New York',\n      numOfEmployees: '120'\n    },\n    {\n      id: 5,\n      name: 'test6',\n      contactPerson: 'test6',\n      phone: '1234567890',\n      location: 'Tokyo',\n      numOfEmployees: '15'\n    },\n    {\n      id: 6,\n      name: 'test7',\n      contactPerson: 'test7',\n      phone: '1234567890',\n      location: 'San Jose',\n      numOfEmployees: '250'\n    },\n    {\n      id: 7,\n      name: 'test8',\n      contactPerson: 'test8',\n      phone: '1234567890',\n      location: 'Michigan',\n      numOfEmployees: '25'\n    },\n    {\n      id: 8,\n      name: 'test9',\n      contactPerson: 'test9',\n      phone: '1234567890',\n      location: 'Las Vegas',\n      numOfEmployees: '110'\n    }\n  ]\n  \n  constructor(private http: HttpClient) { }\n\n  getCustomerData() {\n    return this.custData;\n  }\n\n  public getWeatherDataByCity(cityNames): Observable<any[]> {\n    let apiArray = [];\n    for(let i=0; i < cityNames.length; i++) {\n      apiArray.push(this.http.get('https://api.openweathermap.org/'+this.url+cityNames[i]+this.urlEnd));\n    }\n    return forkJoin(apiArray);\n  }\n\n  public getRainyCityData(res) {\n    let cityWithRain = [];\n    let currentDate = new Date(Date.now());\n      let cureentFormatDate = currentDate.toLocaleDateString('en-CA');\n      let currentDatePlusFive = new Date();\n      currentDatePlusFive.setDate(currentDatePlusFive.getDate() + 5);\n      let currentDatePlusFiveFormat = currentDatePlusFive.toLocaleDateString('en-CA');\n      for (let counterCity = 0; counterCity <= res.length - 1; counterCity++) {\n        let cityDetail = res[counterCity];\n        let cityWeatherDetail = cityDetail.list\n        for (let counterCityWeatherDetail = 0; counterCityWeatherDetail <= cityWeatherDetail.length - 1; counterCityWeatherDetail++) {\n          let dateFromApi = cityWeatherDetail[counterCityWeatherDetail].dt_txt.split(' ')[0];\n          if (Date.parse(dateFromApi) <= Date.parse(currentDatePlusFiveFormat) && Date.parse(dateFromApi) >= Date.parse(cureentFormatDate)) {\n            if (cityWeatherDetail[counterCityWeatherDetail].weather[0].main == 'Rain') {\n              if(this.rainDate[cityDetail.city.name]) {\n                this.rainDate[cityDetail.city.name].push(dateFromApi);\n              } else {\n                this.rainDate[cityDetail.city.name] = [dateFromApi];\n              }\n              \n              cityWithRain.push(cityDetail);\n            }\n          }\n        }\n      }\n      return cityWithRain;\n    }\n  \n  public getRainyCityTableData(res, uniqueCityNames, custData) {\n      let displayData2 = [];\n      let cityWithRain = this.getRainyCityData(res);\n\n      let rainyCityNames = cityWithRain.map((obj) => {\n        return obj.city.name;\n      });\n\n      rainyCityNames = [...(new Set(rainyCityNames))]\n\n      let intersectionCities = rainyCityNames.filter(e => uniqueCityNames.indexOf(e) !== -1);\n\n      displayData2 = custData.filter((obj) => {\n        if(intersectionCities.includes(obj.location)) {\n          if(this.rainDate[obj.location]) {\n            this.rainDate[obj.location] = [...(new Set(this.rainDate[obj.location]))];\n            obj['dates'] = this.rainDate[obj.location];\n            return obj;\n          }\n        }\n      });\n\n      return displayData2;\n  }\n\n  getRainyCityChartData(res, custData) {\n    let displayData = [];\n    let cityWithRain = this.getRainyCityData(res);\n\n    let rainyCityNames = cityWithRain.map((obj) => {\n      return obj.city.name;\n    });\n\n    rainyCityNames = [...(new Set(rainyCityNames))]\n\n    displayData = custData.filter((obj) => {\n      if(rainyCityNames.includes(obj.location)) {\n        if(this.rainDate[obj.location]) {\n          this.rainDate[obj.location] = [...(new Set(this.rainDate[obj.location]))];\n          obj['dates'] = this.rainDate[obj.location];\n        }\n      }\n      return obj;\n    });\n\n    return displayData;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}